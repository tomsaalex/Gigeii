// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func LoginPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n     body {\n                background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);\n                font-family: 'Poppins', sans-serif;\n            }\n            .login-card {\n                border-radius: 15px;\n                border: none;\n                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n                background: #ffffff;\n                padding: 2rem;\n                width: 400px;\n            }\n            .login-title {\n                color: #333;\n                font-weight: 700;\n                margin-bottom: 1.5rem;\n            }\n            .btn-custom {\n                background-color: #6a11cb;\n                border: none;\n                color: white;\n                font-weight: 600;\n                padding: 0.75rem;\n                transition: background-color 0.3s ease;\n            }\n            .btn-custom:hover {\n                background-color: #520d99;\n            }\n            .form-control:focus {\n                border-color: #6a11cb;\n                box-shadow: 0 0 0 0.2rem rgba(106, 17, 203, 0.25);\n            }\n            .link-custom {\n                color: #6a11cb;\n                text-decoration: none;\n                font-weight: 500;\n            }\n            .link-custom:hover {\n                color: #520d99;\n                text-decoration: underline;\n            }\n            .alert {\n                border-radius: 10px;\n                font-size: 0.9rem;\n                padding: 0.5rem 1rem;\n            }\n     </style><div class=\"d-flex justify-content-center align-items-center vh-100\"><div class=\"login-card\"><h3 class=\"login-title text-center\">Welcome</h3><form id=\"login-form\" hx-post=\"/auth/login\" hx-target-error=\"#response\" hx-swap=\"innerHTML\" hx-ext=\"form-json,response-targets\" class=\"needs-validation\" novalidate><div id=\"response\" class=\"mb-3\"></div><div class=\"mb-3\"><label class=\"form-label\">Email</label> <input type=\"email\" name=\"email\" class=\"form-control\" required><div class=\"invalid-feedback\">Please enter a valid email.</div></div><div class=\"mb-3\"><label class=\"form-label\">Password</label> <input type=\"password\" name=\"password\" class=\"form-control\" required><div class=\"invalid-feedback\">Please enter your password.</div></div><button class=\"btn btn-custom w-100\">Login</button></form><div class=\"mt-3 text-center\"><a href=\"/register\" class=\"link-custom\">Don't have an account? Register</a></div></div><script>\n            (function(){\n                'use strict';\n                let form = document.getElementById('login-form');\n\n                form.addEventListener('submit', function(e) {\n                    if (!form.checkValidity()) {\n                        e.preventDefault(); e.stopPropagation();\n                    }\n                    form.classList.add('was-validated');\n                }, false);\n\n                form.addEventListener('htmx:beforeSend', function(evt) {\n                    const inputs = form.querySelectorAll('input');\n                    inputs.forEach(input => {\n                        input.classList.remove('is-valid', 'is-invalid');\n                        if (input.nextElementSibling) {\n                            input.nextElementSibling.textContent = '';\n                        }\n                    });\n                });\n\n                form.addEventListener('htmx:afterSwap', function(evt) {\n                    if (evt.detail.target.id === 'response') {\n                        const emailInput = form.querySelector('[name=email]');\n                        const passwordInput = form.querySelector('[name=password]');\n\n                        if (evt.detail.xhr.status === 401 || evt.detail.xhr.status === 400) {\n                            emailInput.classList.add('is-invalid');\n                            passwordInput.classList.add('is-invalid');\n                            if (emailInput.nextElementSibling) {\n                                emailInput.nextElementSibling.textContent = \"Incorrect email.\";\n                            }\n                            if (passwordInput.nextElementSibling) {\n                                passwordInput.nextElementSibling.textContent = \"Incorrect password.\";\n                            }\n                        }\n\n                        const alert = document.querySelector('#response .alert');\n                        if (alert) {\n                            setTimeout(() => {\n                                alert.classList.add('fade');\n                                alert.classList.add('show');\n                                setTimeout(() => {\n                                    alert.remove();\n                                }, 1000);\n                            }, 3000);\n                        }\n                    }\n                });\n            })();\n        </script></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
