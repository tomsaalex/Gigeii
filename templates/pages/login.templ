package pages

templ LoginPage() {
    <style>
     body {
                background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
                font-family: 'Poppins', sans-serif;
            }
            .login-card {
                border-radius: 15px;
                border: none;
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
                background: #ffffff;
                padding: 2rem;
                width: 400px;
            }
            .login-title {
                color: #333;
                font-weight: 700;
                margin-bottom: 1.5rem;
            }
            .btn-custom {
                background-color: #6a11cb;
                border: none;
                color: white;
                font-weight: 600;
                padding: 0.75rem;
                transition: background-color 0.3s ease;
            }
            .btn-custom:hover {
                background-color: #520d99;
            }
            .form-control:focus {
                border-color: #6a11cb;
                box-shadow: 0 0 0 0.2rem rgba(106, 17, 203, 0.25);
            }
            .link-custom {
                color: #6a11cb;
                text-decoration: none;
                font-weight: 500;
            }
            .link-custom:hover {
                color: #520d99;
                text-decoration: underline;
            }
            .alert {
                border-radius: 10px;
                font-size: 0.9rem;
                padding: 0.5rem 1rem;
            }
     </style>
    <div class="d-flex justify-content-center align-items-center vh-100">
        <div class="login-card">
            <h3 class="login-title text-center">Welcome</h3>
            <form
                id="login-form"
                hx-post="/login"
                hx-target="#response"
                hx-swap="innerHTML"
                class="needs-validation"
                novalidate>
                <div id="response" class="mb-3"></div>

                <div class="mb-3">
                    <label class="form-label">Username</label>
                    <input type="text" name="username" class="form-control" required/>
                    <div class="invalid-feedback">Please enter a valid username.</div>
                </div>

                <div class="mb-3">
                    <label class="form-label">Password</label>
                    <input type="password" name="password" class="form-control" required/>
                    <div class="invalid-feedback">Please enter your password.</div>
                </div>

                <button class="btn btn-custom w-100">Login</button>
            </form>

            <div class="mt-3 text-center">
                <a href="/register" class="link-custom">Don't have an account? Register</a>
            </div>
        </div>

        <script>
            (function(){
                'use strict';
                let form = document.getElementById('login-form');

                form.addEventListener('submit', function(e) {
                    if (!form.checkValidity()) {
                        e.preventDefault(); e.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);

                form.addEventListener('htmx:beforeSend', function(evt) {
                    const inputs = form.querySelectorAll('input');
                    inputs.forEach(input => {
                        input.classList.remove('is-valid', 'is-invalid');
                        if (input.nextElementSibling) {
                            input.nextElementSibling.textContent = '';
                        }
                    });
                });

                form.addEventListener('htmx:afterSwap', function(evt) {
                    if (evt.detail.target.id === 'response') {
                        const usernameInput = form.querySelector('[name=username]');
                        const passwordInput = form.querySelector('[name=password]');

                        if (evt.detail.xhr.status === 401 || evt.detail.xhr.status === 400) {
                            usernameInput.classList.add('is-invalid');
                            passwordInput.classList.add('is-invalid');
                            if (usernameInput.nextElementSibling) {
                                usernameInput.nextElementSibling.textContent = "Incorrect username.";
                            }
                            if (passwordInput.nextElementSibling) {
                                passwordInput.nextElementSibling.textContent = "Incorrect password.";
                            }
                        }

                        const alert = document.querySelector('#response .alert');
                        if (alert) {
                            setTimeout(() => {
                                alert.classList.add('fade');
                                alert.classList.add('show');
                                setTimeout(() => {
                                    alert.remove();
                                }, 1000);
                            }, 3000);
                        }
                    }
                });
            })();
        </script>
    </div>
}